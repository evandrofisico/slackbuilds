#!/bin/sh

# Slackware build script for xtuple

# Copyright 2008-2010 Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=xtuple
VERSION=3.5.4
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-client-$VERSION-source
tar xvf $CWD/$PRGNAM-client-$VERSION-source.tar.bz2
cd $PRGNAM-client-$VERSION-source
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

cd xtuple
  qmake \
    QMAKE_CFLAGS+="$SLKCFLAGS" \
    QMAKE_CXXFLAGS+="$SLKCFLAGS" \
    OPENRPT_DIR="/usr/include/openrpt" \
    CSVIMP_DIR="/usr/include/csvimp"

  # Adjust openrpt resource lookup path
  sed -i "s|../\$\${OPENRPT_DIR}/OpenRPT/|/usr/share/openrpt/|" \
    guiclient/guiclient.pro

  # Adjust openrpt library lookup path
  sed -i "s|../\$\${OPENRPT_DIR}/lib/|/usr/lib$LIBDIRSUFFIX/|" \
    guiclient/guiclient.pro

  make qmake_all

  # fix wrong path to the openrpt headers
  for i in common/Makefile widgets/Makefile \
   widgets/Makefile.dll guiclient/Makefile scriptapi/Makefile; do
    sed -i "s|..//usr/include/|/usr/include/|g" $i
  done

  # building shared libraries instead of static ones, makes the
  # xtuple-updater binary somewhat smaller
  AR="AR            = ar cqs"
  RANLIB="RANLIB        = "
  LINK="LINK          = g++"
  LFLAGS="LFLAGS        = -Wl,-rpath,/usr/lib$LIBDIRSUFFIX/qt/lib -shared"

  for i in common/Makefile scriptapi/Makefile \
    widgets/Makefile widgets/Makefile.dll; do
      sed -i "s|$AR|$LINK|" $i
      sed -i "s|$RANLIB|$LFLAGS|" $i
      sed -i "s|\$(AR)|\$(LINK) \$(LFLAGS) -o|" $i
      sed -i "s|\.a|\.so|" $i
  done

  sed -i "s|\.a|\.so|g" guiclient/Makefile


  # libxtuplewidgets.so is installed during make, so we change the path here
  # so that it's included in the package
  dest="DESTDIR       = \$(DESTDIR)"
  sed -i "s|/usr/lib$LIBDIRSUFFIX/qt/plugins/designer/|$\(DESTDIR\) |g" \
    widgets/Makefile.dll
  sed -i "s|$dest|DESTDIR       = $PKG/usr/lib$LIBDIRSUFFIX/qt/plugins/designer/|" \
    widgets/Makefile.dll

  make

  mkdir -p $PKG/usr/{bin,lib$LIBDIRSUFFIX,share/xtuple}
  install -m 0755 bin/* $PKG/usr/bin/
  install -m 0655 lib/* $PKG/usr/lib$LIBDIRSUFFIX/

  # install headers required for xtuple-updater
  for i in common common/tmp; do
    for j in $(find $i -name "*.h"); do
      install -m 0655 -D $j $PKG/usr/include/xtuple/$j
    done
  done

cd -

# remove duplicated library
cd $PKG/usr/lib$LIBDIRSUFFIX/qt/plugins/designer
  rm -f libxtuplewidgets.so
cd -


mkdir -p $PKG/usr/share/applications

install -m 0644 $CWD/xtuple.desktop \
    $PKG/usr/share/applications/xtuple.desktop

for i in 16 32 48 128; do
  mkdir -p $PKG/usr/share/icons/hicolor/${i}x${i}/apps
  install -m 0644 xtuple/guiclient/images/icon${i}x32.png \
    $PKG/usr/share/icons/hicolor/${i}x${i}/apps/xtuple.png
done

install -m 644 $CWD/init.sql $PKG/usr/share/xtuple/

for i in demo empty quickstart; do
  FILE="postbooks_$i-$VERSION.backup"
  if [ -e "$CWD/$FILE" ]; then
    cp -f "$CWD/$FILE" $PKG/usr/share/xtuple/postbooks_$i.backup
  fi
done

mkdir -p $PKG/var/log/setup/
install -m 755 $CWD/xtuple-setup.sh $PKG/var/log/setup/setup.xtuple

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a INSTALL.TXT LICENSE.txt README_FIRST.txt \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
